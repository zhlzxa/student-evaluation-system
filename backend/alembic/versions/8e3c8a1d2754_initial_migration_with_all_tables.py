"""Initial migration with all tables

Revision ID: 8e3c8a1d2754
Revises: 
Create Date: 2025-09-07 01:39:38.175776

"""
from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = '8e3c8a1d2754'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country_degree_equivalencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_code', sa.String(length=3), nullable=False),
    sa.Column('country_name', sa.String(length=128), nullable=False),
    sa.Column('uk_class', sa.String(length=32), nullable=False),
    sa.Column('requirement', sa.JSON(), nullable=True),
    sa.Column('source_url', sa.String(length=1000), nullable=True),
    sa.Column('last_verified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country_code', 'uk_class', name='uq_country_uk_class')
    )
    op.create_index(op.f('ix_country_degree_equivalencies_country_code'), 'country_degree_equivalencies', ['country_code'], unique=False)
    op.create_index(op.f('ix_country_degree_equivalencies_country_name'), 'country_degree_equivalencies', ['country_name'], unique=False)
    op.create_index(op.f('ix_country_degree_equivalencies_uk_class'), 'country_degree_equivalencies', ['uk_class'], unique=False)
    op.create_table('degree_equivalency_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uk_class', sa.String(length=32), nullable=False),
    sa.Column('source_url', sa.String(length=1000), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uk_class', name='uq_degree_equiv_source_uk_class')
    )
    op.create_index(op.f('ix_degree_equivalency_sources_uk_class'), 'degree_equivalency_sources', ['uk_class'], unique=False)
    op.create_table('english_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nationality_exempt_countries', sa.JSON(), nullable=True),
    sa.Column('degree_obtained_exempt_countries', sa.JSON(), nullable=True),
    sa.Column('levels', sa.JSON(), nullable=True),
    sa.Column('source_url', sa.String(length=1000), nullable=True),
    sa.Column('last_verified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('special_institution_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_code', sa.String(length=3), nullable=False),
    sa.Column('institution_name', sa.String(length=512), nullable=False),
    sa.Column('category', sa.String(length=256), nullable=False),
    sa.Column('thresholds', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country_code', 'institution_name', name='uq_country_institution')
    )
    op.create_index(op.f('ix_special_institution_rules_category'), 'special_institution_rules', ['category'], unique=False)
    op.create_index(op.f('ix_special_institution_rules_country_code'), 'special_institution_rules', ['country_code'], unique=False)
    op.create_index(op.f('ix_special_institution_rules_institution_name'), 'special_institution_rules', ['institution_name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('admission_rule_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('english_rule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['english_rule_id'], ['english_rules.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_admission_rule_sets_id'), 'admission_rule_sets', ['id'], unique=False)
    op.create_table('assessment_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_set_id', sa.Integer(), nullable=True),
    sa.Column('source_url', sa.String(length=1000), nullable=True),
    sa.Column('custom_requirements', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['rule_set_id'], ['admission_rule_sets.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_runs_status'), 'assessment_runs', ['status'], unique=False)
    op.create_table('applicants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('folder_name', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['assessment_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applicants_run_id'), 'applicants', ['run_id'], unique=False)
    op.create_table('applicant_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('rel_path', sa.String(length=1024), nullable=False),
    sa.Column('original_filename', sa.String(length=512), nullable=False),
    sa.Column('content_type', sa.String(length=128), nullable=True),
    sa.Column('size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('text_preview', sa.Text(), nullable=True),
    sa.Column('doc_type', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applicant_documents_applicant_id'), 'applicant_documents', ['applicant_id'], unique=False)
    op.create_table('applicant_evaluations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('agent_name', sa.String(length=64), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applicant_evaluations_agent_name'), 'applicant_evaluations', ['agent_name'], unique=False)
    op.create_index(op.f('ix_applicant_evaluations_applicant_id'), 'applicant_evaluations', ['applicant_id'], unique=False)
    op.create_table('applicant_gating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('decision', sa.String(length=16), nullable=False),
    sa.Column('reasons', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('applicant_id')
    )
    op.create_index(op.f('ix_applicant_gating_decision'), 'applicant_gating', ['decision'], unique=False)
    op.create_table('applicant_ranking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('weighted_score', sa.Float(), nullable=True),
    sa.Column('final_rank', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('applicant_id')
    )
    op.create_table('pairwise_comparisons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('applicant_a_id', sa.Integer(), nullable=False),
    sa.Column('applicant_b_id', sa.Integer(), nullable=False),
    sa.Column('winner', sa.String(length=4), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('pass_index', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_a_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['applicant_b_id'], ['applicants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['run_id'], ['assessment_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pairwise_comparisons_run_id'), 'pairwise_comparisons', ['run_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pairwise_comparisons_run_id'), table_name='pairwise_comparisons')
    op.drop_table('pairwise_comparisons')
    op.drop_table('applicant_ranking')
    op.drop_index(op.f('ix_applicant_gating_decision'), table_name='applicant_gating')
    op.drop_table('applicant_gating')
    op.drop_index(op.f('ix_applicant_evaluations_applicant_id'), table_name='applicant_evaluations')
    op.drop_index(op.f('ix_applicant_evaluations_agent_name'), table_name='applicant_evaluations')
    op.drop_table('applicant_evaluations')
    op.drop_index(op.f('ix_applicant_documents_applicant_id'), table_name='applicant_documents')
    op.drop_table('applicant_documents')
    op.drop_index(op.f('ix_applicants_run_id'), table_name='applicants')
    op.drop_table('applicants')
    op.drop_index(op.f('ix_assessment_runs_status'), table_name='assessment_runs')
    op.drop_table('assessment_runs')
    op.drop_index(op.f('ix_admission_rule_sets_id'), table_name='admission_rule_sets')
    op.drop_table('admission_rule_sets')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_special_institution_rules_institution_name'), table_name='special_institution_rules')
    op.drop_index(op.f('ix_special_institution_rules_country_code'), table_name='special_institution_rules')
    op.drop_index(op.f('ix_special_institution_rules_category'), table_name='special_institution_rules')
    op.drop_table('special_institution_rules')
    op.drop_table('english_rules')
    op.drop_index(op.f('ix_degree_equivalency_sources_uk_class'), table_name='degree_equivalency_sources')
    op.drop_table('degree_equivalency_sources')
    op.drop_index(op.f('ix_country_degree_equivalencies_uk_class'), table_name='country_degree_equivalencies')
    op.drop_index(op.f('ix_country_degree_equivalencies_country_name'), table_name='country_degree_equivalencies')
    op.drop_index(op.f('ix_country_degree_equivalencies_country_code'), table_name='country_degree_equivalencies')
    op.drop_table('country_degree_equivalencies')
    # ### end Alembic commands ###

